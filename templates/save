using UnityEngine;
using System.Collections;
using System;


public class PlayerController : MonoBehaviour {

	private GameObject player;
	private Rigidbody2D rigidBody;
	private BoxCollider2D boxCollider;

	public float speedVertical = 1f;
	public float speedHorizontal = 1.3f;

	private int directionFacing;

	private float baseYforScale = (-1)*1f;
	private float baseXScale;
	private float baseYScale;
	private float baseZScale;

	Animator anim;

	Animation walkS;

	void Start () {

		player = GameObject.Find("Young Yonatan");

		boxCollider = player.GetComponent<BoxCollider2D> ();
		rigidBody = player.GetComponent<Rigidbody2D> ();

		baseXScale = player.transform.localScale.x;
		baseYScale = player.transform.localScale.y;
		baseZScale = player.transform.localScale.z;

		directionFacing = 2;

		anim = player.GetComponent<Animator> ();
	}
	
	// Update is called once per frame
	void Update () {

		// do player move if move input
		Vector3 move;
		float angle = 0f;
		float vectorX, vectorY;

		bool playerMove = false;
		bool yChange = false;

		// get 8-directional angle and other data based on input
		if ( (Input.GetKey (KeyCode.A) && Input.GetKey(KeyCode.S)) || 
			 (Input.GetKey(KeyCode.LeftArrow) && Input.GetKey(KeyCode.DownArrow)) ) {

			// down left
			angle = 225f;
			playerMove = true;
			yChange = true;
			directionFacing = 1;
		}
		else if ( (Input.GetKey (KeyCode.D) && Input.GetKey(KeyCode.S))  || 
			(Input.GetKey(KeyCode.RightArrow) && Input.GetKey(KeyCode.DownArrow)) ) {

			// down right
			angle = 315f;
			playerMove = true;
			yChange = true;
			directionFacing = 3;
		}
		else if ( (Input.GetKey (KeyCode.A) && Input.GetKey(KeyCode.W)) || 
			(Input.GetKey(KeyCode.LeftArrow) && Input.GetKey(KeyCode.UpArrow)) ) {

			// up left
			angle = 135f;
			playerMove = true;
			yChange = true;
			directionFacing = 7;
		}
		else if ( (Input.GetKey (KeyCode.D) && Input.GetKey(KeyCode.W)) || 
			(Input.GetKey(KeyCode.RightArrow) && Input.GetKey(KeyCode.UpArrow)) ) {

			// up right
			angle = 45f;
			playerMove = true;
			yChange = true;
			directionFacing = 9;
		}
		else if (Input.GetKey (KeyCode.S) || Input.GetKey(KeyCode.DownArrow)) {

			// down
			angle = 270f;
			playerMove = true;
			yChange = true;
			directionFacing = 2;
		}
		else if (Input.GetKey (KeyCode.A) || Input.GetKey(KeyCode.LeftArrow)) {

			// left
			angle = 180f;
			playerMove = true;
			directionFacing = 4;
		}
		else if (Input.GetKey (KeyCode.D) || Input.GetKey(KeyCode.RightArrow)) {

			// right
			angle = 0f;
			playerMove = true;
			directionFacing = 6;
		}
		else if (Input.GetKey (KeyCode.W) || Input.GetKey(KeyCode.UpArrow)) {

			// up
			angle = 90f;
			playerMove = true;
			yChange = true;
			directionFacing = 8;
		}

		if (playerMove) {

			// create move vector based on circle with radius 1 and center (0,0)
			vectorX = Mathf.Cos ((float)(angle * Math.PI / 180));
			vectorY = Mathf.Sin ((float)(angle * Math.PI / 180));
			move = new Vector3 (vectorX, vectorY, 0);

			// tell the animator which direction we're facing
			anim.SetInteger ("directionFacing", directionFacing);
			// tell the animator that we're moving
			anim.SetFloat ("speed", Mathf.Abs (vectorX) + Mathf.Abs (vectorY));

			// scale movement speed because sprite scaling makes make faster when moving vertically
			if (yChange) {

				transform.position += move * speedVertical * Time.deltaTime;
				updateScale ();
			} else {

				transform.position += move * speedHorizontal * Time.deltaTime;
			}
		} else {
			// must be better way to determine if moving?
			anim.SetFloat ("speed", 0f);
		}
	}

	void updateScale () {

		float yCoord = transform.position.y;
		int yAdjust = (int)((yCoord - baseYforScale) * 10);
		float scaleUnits = (float)(-yAdjust / 3) / 10f;

		// not sure if i need Z coords everywhere... should probably read about that
		float newX = baseXScale + scaleUnits;
		float newY = baseYScale + scaleUnits;
		float newZ = baseZScale + scaleUnits;

		player.transform.localScale = new Vector3(newX, newY, newZ);
	}
		
	void OnCollisionEnter2D() {

	}

	// FixedUpdate is called before each physics step
	void FixedUpdate () {

	}

}


/* Tutorial: Moving the Player (Space Shooter)
 
using UnityEngine;
using System.Collections;

[System.Serializable]
public class Boundary
{
    public float xMin, xMax, zMin, zMax;
}

public class PlayerController : MonoBehaviour
{
    public float speed;
    public float tilt;
    public Boundary boundary;

    void FixedUpdate ()
    {
        float moveHorizontal = Input.GetAxis ("Horizontal");
        float moveVertical = Input.GetAxis ("Vertical");

        Vector3 movement = new Vector3 (moveHorizontal, 0.0f, moveVertical);
        rigidbody.velocity = movement * speed;

        rigidbody.position = new Vector3 
        (
            Mathf.Clamp (rigidbody.position.x, boundary.xMin, boundary.xMax), 
            0.0f, 
            Mathf.Clamp (rigidbody.position.z, boundary.zMin, boundary.zMax)
        );

        rigidbody.rotation = Quaternion.Euler (0.0f, 0.0f, rigidbody.velocity.x * -tilt);
    }
}

*/
